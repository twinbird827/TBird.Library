@page "/detail/{title}/{place}/{race}"
@model ResultDetailModel
<!DOCTYPE html>
<html>
<head>
    <title>Result Detail</title>
</head>
<body>
    <h4>[@(Model.Places[Model.Place])] [@($"R{@Model.Race}")] [@(Model.Class1)] @Model.Name</h4>

    <ul class="menu">
        @foreach (var x in Model.Places)
        {
            var i = Model.Places.IndexOf(x);
            if (i == Model.Place)
            {
                <li>@x</li>
            }
            else
            {
                <li><a asp-route="Route01" asp-route-title="@Model.Title" asp-route-place="@i" asp-route-race="@Model.Race">@x</a></li>
            }
        }
    </ul>
    <ul class="menu">
        @foreach (var x in Model.Races)
        {
            @if (x == Model.Race)
            {
                <li>@x</li>
            }
            else
            {
                <li><a asp-route="Route01" asp-route-title="@Model.Title" asp-route-place="@Model.Place" asp-route-race="@x">@x</a></li>
            }
        }
    </ul>

    <table width="100%" class="sticky_table">
        <thead>
            <tr>
                <th width="9%">@Html.DisplayNameFor(m => m.Displays[0].Waku)</th>
                <th width="9%">@Html.DisplayNameFor(m => m.Displays[0].Umano)</th>
                <th width="30%" class="textleft">@Html.DisplayNameFor(m => m.Displays[0].Umaname)</th>
                <th width="5%">@Html.DisplayNameFor(m => m.Displays[0].Avg)</th>
                <th width="2%"></th>
                <th width="5%">@Html.DisplayNameFor(m => m.Displays[0].B1)</th>
                <th width="5%">@Html.DisplayNameFor(m => m.Displays[0].B2)</th>
                <th width="5%">@Html.DisplayNameFor(m => m.Displays[0].B3)</th>
                <th width="5%">@Html.DisplayNameFor(m => m.Displays[0].B4)</th>
                <th width="5%">@Html.DisplayNameFor(m => m.Displays[0].RN)</th>
                <th width="5%">@Html.DisplayNameFor(m => m.Displays[0].M1)</th>
                <th width="5%">@Html.DisplayNameFor(m => m.Displays[0].M2)</th>
                <th width="5%">@Html.DisplayNameFor(m => m.Displays[0].M3)</th>
                <th width="5%">@Html.DisplayNameFor(m => m.Displays[0].M4)</th>
            </tr>
        </thead>
        <tbody>
            @{
                string GetTdClassname(int i) => i < 5 ? $"r{i}" : "rx";
            }
            @foreach (var x in Model.Displays)
            {
                <tr>
                    <td width="9%">@Html.DisplayFor(m => x.Waku)</td>
                    <td width="9%">@Html.DisplayFor(m => x.Umano)</td>
                    <td width="30%" class="textleft">@Html.DisplayFor(m => x.Umaname)</td>
                    <td width="5%" class="@GetTdClassname(x.Rank)">@Html.DisplayFor(m => x.Avg)</td>
                    <td width="2%"></td>
                    <td width="5%" class="@GetTdClassname(x.B1)">@Html.DisplayFor(m => x.B1Str)</td>
                    <td width="5%" class="@GetTdClassname(x.B2)">@Html.DisplayFor(m => x.B2Str)</td>
                    <td width="5%" class="@GetTdClassname(x.B3)">@Html.DisplayFor(m => x.B3Str)</td>
                    <td width="5%" class="@GetTdClassname(x.B4)">@Html.DisplayFor(m => x.B4Str)</td>
                    <td width="5%" class="@GetTdClassname(x.RN)">@Html.DisplayFor(m => x.RNStr)</td>
                    <td width="5%" class="@GetTdClassname(x.M1)">@Html.DisplayFor(m => x.M1Str)</td>
                    <td width="5%" class="@GetTdClassname(x.M2)">@Html.DisplayFor(m => x.M2Str)</td>
                    <td width="5%" class="@GetTdClassname(x.M3)">@Html.DisplayFor(m => x.M3Str)</td>
                    <td width="5%" class="@GetTdClassname(x.M4)">@Html.DisplayFor(m => x.M4Str)</td>
                </tr>
            }
        </tbody>
    </table>

</body>
</html>